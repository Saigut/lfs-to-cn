<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="space-creatingfilesystem">
  <?dbhtml filename="creatingfilesystem.html"?>

  <title>在分区上创建一个文件系统</title>

  <para>现在一个空白的分区已经准备好了，就可以创建文件系统了。LFS可以使用Linux内核能识别的任何文件系统，但最常用的类型是ext3和ext4。文件系统的选择会比较复杂，要看文件的特点和分区的大小。例如：</para>

  <variablelist>
    <varlistentry>
      <term>ext2</term>
      <listitem><para>适合于不常更新的小分区，比如 /boot。</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>ext3</term>
      <listitem><para>是ext2的一个升级，包括了一个日志功能，用以在未清理的关机的情况下帮助恢复分区状态。它通常被用作通用文件系统。</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>ext4</term>
      <listitem><para>是分区类型中的ext文件系统系列的最新版本。它提供了一些新功能，包括纳秒级的时间戳，超大文件（16TB）的创建和使用，以及速度的提升。</para>
      </listitem>
    </varlistentry>
  </variablelist>

  <para>其它文件系统，包括FAT32、NTFS、ReiserFS、JFS、和 XFS，一般用于专门目的。关于这些文件系统的更多信息可以在这里找到：<ulink url="http://en.wikipedia.org/wiki/Comparison_of_file_systems"/>。</para>

  <para>LFS假设根文件系统（/）是ext4类型。要在LFS分区上创建一个 <systemitem class="filesystem">ext4</systemitem> 文件系统，运行下面的命令：</para>

<screen role="nodump"><userinput>mkfs -v -t ext4 /dev/<replaceable>&lt;xxx&gt;</replaceable></userinput></screen>

<!--
  <para>Replace <replaceable>&lt;xxx&gt;</replaceable> with the name of the LFS
  partition (<filename class="devicefile">sda5</filename> in our previous
  example).</para>

  <note>
    <para>Some host distributions use custom features in their filesystem
    creation tools (E2fsprogs). This can cause problems when booting into your new
    LFS in Chapter 9, as those features will not be supported by the LFS-installed
    E2fsprogs; you will get an error similar to <quote>unsupported filesystem
    features, upgrade your e2fsprogs</quote>. To check if your host system
    uses custom enhancements, run the following command:</para>

<screen role="nodump"><userinput>debugfs -R feature /dev/<replaceable>&lt;xxx&gt;</replaceable></userinput></screen>

    <para>If the output contains features other than
    <option>has_journal</option>, <option>ext_attr</option>,
    <option>resize_inode</option>, <option>dir_index</option>,
    <option>filetype</option>, <option>sparse_super</option>,
    <option>large_file</option> or <option>needs_recovery</option>, then your
    host system may have custom enhancements.  In that case, to avoid later
    problems, you should compile the stock E2fsprogs package and use the
    resulting binaries to re-create the filesystem on your LFS partition:</para>

<screen role="nodump"><userinput>cd /tmp
tar -xzvf /path/to/sources/e2fsprogs-&e2fsprogs-version;.tar.gz
cd e2fsprogs-&e2fsprogs-version;
mkdir -v build
cd build
../configure
make #note that we intentionally don't 'make install' here!
./misc/mke2fs -jv /dev/<replaceable>&lt;xxx&gt;</replaceable>
cd /tmp
rm -rfv e2fsprogs-&e2fsprogs-version;</userinput></screen>
  </note>
-->
  <para>如果你是使用的一个已存在的 <systemitem class="filesystem">swap
  </systemitem> 分区的话，就不需要把它格式化。如果创建了一个新 <systemitem class="filesystem"> swap</systemitem> 分区，就需要用这个命令把它初始化：</para>

<screen role="nodump"><userinput>mkswap /dev/<replaceable>&lt;yyy&gt;</replaceable></userinput></screen>

  <para>把 <replaceable>&lt;yyy&gt;</replaceable> 替换为 <systemitem class="filesystem">swap</systemitem> 分区的名字。</para>

</sect1>
