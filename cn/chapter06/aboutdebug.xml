<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-aboutdebug">
  <?dbhtml filename="aboutdebug.html"?>

  <title>有关调试符号</title>

  <para>多数程序和库在编译时都包含了调试符号 (使用 <command>gcc</command> 的 <parameter>-g</parameter> 选项)。这意味着调试编译有调试信息的程序和库的时候调试器不仅能够提供内存地址还能提供途径和变量名。</para>

  <para>然而包含这些调试符号显著增大了程序和库的空间占用。以下是这些符号占据空间的一个例子：</para>

  <itemizedlist>
    <listitem>
      <para><command>bash</command> 二进制，包含调试符号：1200 KB</para>
    </listitem>
    <listitem>
      <para><command>bash</command> 二进制，不含调试符号：480 KB</para>
    </listitem>
    <listitem>
      <para>Glibc 和 GCC 文件 (<filename class="directory">/lib</filename> 和 <filename class="directory">/usr/lib</filename>)，包含测试符号：87 MB</para>
    </listitem>
    <listitem>
      <para>Glibc 和 GCC 文件，不含调试符号：16 MB</para>
    </listitem>
  </itemizedlist>

  <para>由于使用的编译器和 C 库不同，尺寸会有所差异，但总体来说调试符号通常要有程序的 2 到 5 倍大。</para>

  <para>因为多数用户永远不会去调试系统软件，移除这些符号可以释放大量磁盘空间。下一节说明了如何从程序和库中剥离所有的调试符号。</para>

</sect1>
