<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-createfiles">
  <?dbhtml filename="createfiles.html"?>

  <title>创建必要的文件和链接</title>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/etc/passwd">/etc/passwd</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/etc/group">/etc/group</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/var/run/utmp">/var/run/utmp</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/var/log/btmp">/var/log/btmp</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/var/log/lastlog">/var/log/lastlog</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/var/log/wtmp">/var/log/wtmp</primary>
  </indexterm>

  <para>有些程序使用不可更改的路径指向现在还没有到位的程序。为了满足这些程序，创建一些符号链接，在本章中安装对应的软件之后它们会被真正的文件替代：</para>

<screen><userinput>ln -sv /tools/bin/{bash,cat,echo,pwd,stty} /bin
ln -sv /tools/bin/perl /usr/bin
ln -sv /tools/lib/libgcc_s.so{,.1} /usr/lib
ln -sv /tools/lib/libstdc++.so{,.6} /usr/lib
sed 's/tools/usr/' /tools/lib/libstdc++.la > /usr/lib/libstdc++.la
ln -sv bash /bin/sh</userinput></screen>

  <para>历史上，Linux 在 <filename>/etc/mtab</filename> 文件中维护着一个被挂载文件系统的列表。现代内核在内部维护这个列表，并通过 <filename
  class="directory">/proc</filename> 文件系统暴露给用户。为满足那些需要 <filename>/etc/mtab</filename> 文件的工具，创建下面的符号链接：</para>

<screen><userinput>ln -sv /proc/self/mounts /etc/mtab</userinput></screen>

  <para>为了让 <systemitem class="username">root</systemitem> 用户能够登录并且要 <quote>root</quote> 这个名字被识别，在 <filename>/etc/passwd</filename> 和 <filename>/etc/group</filename> 这两个文件中就要有对应的条目存在。</para>

  <para>运行以下命令创建 <filename>/etc/passwd</filename> 文件：</para>

<screen><userinput>cat &gt; /etc/passwd &lt;&lt; "EOF"
<literal>root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/dev/null:/bin/false
nobody:x:99:99:Unprivileged User:/dev/null:/bin/false</literal>
EOF</userinput></screen>

  <para><systemitem class="username">root</systemitem> 用户的实际密码 (这里的 <quote>x</quote> 只用作占位符) 稍后再设置。</para>

  <para>运行以下命令创建 <filename>/etc/group</filename> 文件：</para>

<screen><userinput>cat &gt; /etc/group &lt;&lt; "EOF"
<literal>root:x:0:
bin:x:1:
sys:x:2:
kmem:x:3:
tape:x:4:
tty:x:5:
daemon:x:6:
floppy:x:7:
disk:x:8:
lp:x:9:
dialout:x:10:
audio:x:11:
video:x:12:
utmp:x:13:
usb:x:14:
cdrom:x:15:
mail:x:34:
nogroup:x:99:</literal>
EOF</userinput></screen>

  <para>创建的组并不是任何标准的一部分&mdash;&mdash;它们一部分是本章中 Udev 配置的要求，另一部分是一些已有发行版的惯例。Linux 基础标准 (LSB，位于 <ulink url="http://www.linuxbase.org"/>) 只推荐 <systemitem class="groupname">root</systemitem> 组的 ID 为 0 并且 <systemitem class="groupname">bin</systemitem> 组的 ID 为 1。所有其他组的名称和 ID 都可以由系统管理员自由选择，因为写得好的程序会使用组的名字而不是 ID。</para>

  <para>要移除 <quote>I have no name!</quote> 这个提示符，启动一个新的 shell。因为在 <xref linkend="chapter-temporary-tools"/> 中已经安装了完整的 Glibc 并且 <filename>/etc/passwd</filename> 和 <filename>/etc/group</filename> 这两个文件也创建了，用户和组名称的解析就能够工作了：</para>

<screen role="nodump"><userinput>exec /tools/bin/bash --login +h</userinput></screen>

  <para>注意使用 <parameter>+h</parameter> 参数。此项告知 <command>bash</command> 不要使用内置的路径哈希。没有这个参数，<command>bash</command> 会记住执行过的二进制的路径。要确保新编译的二进制一旦安装就立刻使用， <parameter>+h</parameter> 参数在本章的余下部分一直都要使用。</para>

  <para><command>login</command>、<command>agetty</command> 和 <command>init</command> 程序 (还有其他一些) 使用大量日志文件记录信息，例如谁在什么时候登录过系统。然而，如果日志文件不存在，这些程序就不会写入。初始化日志文件并且给出适当的权限：</para>

<screen><userinput>touch /var/log/{btmp,lastlog,wtmp}
chgrp -v utmp /var/log/lastlog
chmod -v 664  /var/log/lastlog
chmod -v 600  /var/log/btmp</userinput></screen>

  <para><filename>/var/log/wtmp</filename> 文件记录所有的登入登出。<filename>/var/log/lastlog</filename> 文件记录每个用户上次登录的时间。<filename>/var/log/btmp</filename> 文件记录失败的登录尝试。</para>

  <note><para><filename>/run/utmp</filename> 文件记录当前登录的用户。此文件在引导脚本中动态创建。</para></note>

</sect1>
