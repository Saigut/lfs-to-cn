<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-udev" role="wrap">
  <?dbhtml filename="udev.html"?>

  <sect1info condition="script">
    <productname>udev</productname>
    <productnumber>&systemd-version;</productnumber>
    <address>&systemd-url;</address>
  </sect1info>

  <title>Udev-&systemd-version; (Extracted from systemd-&systemd-version;)</title>

  <indexterm zone="ch-system-udev">
    <primary sortas="a-Udev">Udev</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Udev package contains programs for dynamic creation of device
    nodes.  The development of udev has been merged with systemd, but
    most of systemd is incompatible with LFS.  Here we build and install just
    the needed udev files.</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&systemd-ch6-sbu;</seg>
        <seg>&systemd-ch6-du;</seg>
      </seglistitem>
    </segmentedlist>
  </sect2>

  <sect2 role="installation">
    <title>Installation of Udev</title>

    <note><para>This package is a little different from other packages.  The
    initial package that is extracted is
    <filename>systemd-&systemd-version;.tar.xz</filename> even though the
    application we are installing is udev. After changing to the
    systemd directory, follow the instructions below.</para></note>

    <para>The udev-lfs tarball contains LFS-specific files used to build
    Udev. Unpack it into the systemd source directory:</para>

<screen><userinput remap="pre">tar -xvf ../&udev-lfs;.tar.bz2</userinput></screen>

    <para>Create two symbolic links to header files and set an
    environment variable to properly use <xref linkend="ch-tools-util-linux"/>.</para>

<screen><userinput remap="pre">ln -svf /tools/include/blkid /usr/include
ln -svf /tools/include/uuid  /usr/include
export LD_LIBRARY_PATH=/tools/lib</userinput></screen>

    <para>Build the package:</para>

<screen><userinput remap="make">make -f &udev-lfs;/Makefile.lfs</userinput></screen>

    <para>Install the package:</para>

<screen><userinput remap="install">make -f &udev-lfs;/Makefile.lfs install</userinput></screen>

    <caution><para>There are several places within the
    <application>systemd</application> source code that have explicit directory
    paths embedded.  For instance, the binary version of the hardware
    database's path and file name used at run time,
    <filename>/etc/udev/hwdb.bin</filename>, cannot be changed without explicit
    changes to the source code.</para></caution>

    <para>Now initialize the hardware database:</para>

<screen><userinput remap="install">build/udevadm hwdb --update</userinput></screen>

    <para>Finally set up the persistent network udev rules.  This task will be
    explained in detail in <xref linkend='stable-net-names'/>.  Note that the
    <filename class='directory'>/sys</filename> and <filename
    class='directory'>/proc</filename> filesystems must be mounted in the
    chroot environment as explained at the beginning of this chapter for the
    following script to work.</para>

<screen><userinput remap="install">bash &udev-lfs;/init-net-rules.sh</userinput></screen>

    <para>Do some cleanup:</para>

<screen><userinput remap="install">rm -fv /usr/include/{uuid,blkid}
unset LD_LIBRARY_PATH</userinput></screen>

  </sect2>

  <sect2 id="contents-udev" role="content">
    <title>Contents of Udev</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg>accelerometer, ata_id, cdrom_id, collect, mtd_probe,
         scsi_id, v4l_id, udevadm, and udevd</seg>

        <seg>libudev.so</seg>

        <seg>/etc/udev, /lib/udev, /lib/firmware, /usr/share/doc/udev</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="ata_id">
        <term><command>ata_id</command></term>
        <listitem>
          <para>Provides Udev with a unique string and
          additional information (uuid, label) for an ATA drive</para>
          <indexterm zone="ch-system-udev ata_id">
            <primary sortas="b-ata_id">ata_id</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cdrom_id">
        <term><command>cdrom_id</command></term>
        <listitem>
          <para>Provides Udev with the capabilities of a
          CD-ROM or DVD-ROM drive</para>
          <indexterm zone="ch-system-udev cdrom_id">
            <primary sortas="b-cdrom_id">cdrom_id</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="collect">
        <term><command>collect</command></term>
        <listitem>
          <para>Given an ID for the current uevent and a list of
          IDs (for all target uevents), registers the current ID
          and indicates whether all target IDs have been registered</para>
          <indexterm zone="ch-system-udev collect">
            <primary sortas="b-collect">collect</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="scsi_id">
        <term><command>scsi_id</command></term>
        <listitem>
          <para>Provides Udev with a unique SCSI identifier
          based on the data returned from sending a SCSI INQUIRY command to
          the specified device</para>
          <indexterm zone="ch-system-udev scsi_id">
            <primary sortas="b-scsi_id">scsi_id</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="udevadm">
        <term><command>udevadm</command></term>
        <listitem>
          <para>Generic udev administration tool: controls the udevd daemon,
          provides info from the Udev database, monitors uevents, waits for
          uevents to finish, tests Udev configuration, and triggers uevents
          for a given device</para>
          <indexterm zone="ch-system-udev udevadm">
            <primary sortas="b-udevadm">udevadm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="udevd">
        <term><command>udevd</command></term>
        <listitem>
          <para>A daemon that listens for uevents on the netlink socket,
          creates devices and runs the configured external programs in
          response to these uevents</para>
          <indexterm zone="ch-system-udev udevd">
            <primary sortas="b-udevd">udevd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libudev">
        <term><filename class="libraryfile">libudev</filename></term>
        <listitem>
          <para>A library interface to udev device information</para>
          <indexterm zone="ch-system-udev libudev">
            <primary sortas="c-libudev">libudev</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="etc-udev">
        <term><filename class="directory">/etc/udev</filename></term>
        <listitem>
          <para>Contains Udev configuration files,
          device permissions, and rules for device naming</para>
          <indexterm zone="ch-system-udev etc-udev">
            <primary sortas="e-/etc/udev">/etc/udev</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
